import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import Banner from "../components/banner";
import Card from "../components/card";
import { fetchStore } from "../lib/coffee-store";
import { useTrackLocation } from "../hooks/use-track-location";
import { useEffect, useState } from "react";
import { StoreContext } from "../context/store-context";
import { useContext } from "react";
import { ACTION_TYPE } from "../context/store-context";

export async function getStaticProps(context) {
  const formattedData = await fetchStore("23.73,90.37", 6);
  return {
    props: { storeData: formattedData }, // will be passed to the page component as props
  };
}

export default function Home(props) {
  const ctx = useContext(StoreContext);
  const { state, dispatch } = ctx;
  const { handleTrack, locationErrorMsg, isFindingLocation } =
    useTrackLocation(dispatch);

  const handleOnButtonClick = () => {
    handleTrack();
  };

  useEffect(() => {
    async function setCoffeeStoresByLocation() {
      if (state.latLong.length > 0) {
        try {
          const response = await fetch(
            `/api/get-coffee-store-by-location?latlong=${state.latLong}&limit=30`
          );
          const stores = await response.json();
          dispatch({ type: ACTION_TYPE.SET_STORE, payload: stores });
        } catch (error) {
          console.log("error at index page" + error.message);
        }
      }
    }

    setCoffeeStoresByLocation();
  }, [state.latLong, locationErrorMsg]);

  return (
    <div className={styles.container}>
      <Head>
        <title>BuzzCoffee</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.heroImage}>
          <Image src={"/static/logo.svg"} width={"300px"} height={"300px"} />
        </div>
        <Banner
          buttonText={isFindingLocation ? "Loading...." : "View Store Nearby"}
          handleOnClick={handleOnButtonClick}
        />

        {state.stores.length > 0 && (
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}>Stores near me</h2>
            <div className={styles.cardLayout}>
              {state.stores.map((each) => {
                return (
                  <Card
                    className={styles.card}
                    title={each.name}
                    imgUrl={each.imgUrl}
                    url={each.id}
                    key={each.id}
                  />
                );
              })}
            </div>
          </div>
        )}

        {props.storeData.length > 0 && (
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}>Dhaka stores</h2>
            <div className={styles.cardLayout}>
              {props.storeData.map((each) => {
                return (
                  <Card
                    className={styles.card}
                    title={each.name}
                    imgUrl={each.imgUrl}
                    url={each.id}
                    key={each.id}
                  />
                );
              })}
            </div>
          </div>
        )}
      </main>
    </div>
  );
}
